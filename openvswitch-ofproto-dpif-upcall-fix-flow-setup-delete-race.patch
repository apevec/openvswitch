commit e34bbe31b4f61bae48805165ce2c61e13715971c
Author: Joe Stringer <joe@ovn.org>
Date:   Mon Mar 20 14:08:19 2017 -0700

    ofproto-dpif-upcall: Fix flow setup/delete race.
    
    If a handler thread takes a long time to set up a set of flows, it is
    possible for one of the installed flows to be dumped and scheduled
    for deletion by a revalidator thread before the handler is able to
    transition the ukey into an operational state---Between the
    dpif_operate() above this function and the ukey lock / transition logic
    modified by this patch.
    
    Only transition the ukey for the flow if it wasn't already transitioned
    to a later state by a revalidator thread.
    
    Fixes: 54ebeff4c03d ("upcall: Track ukey states.")
    Reported-by: Paul Blakey <paulb@mellanox.com>
    Signed-off-by: Joe Stringer <joe@ovn.org>
    Tested-by: Paul Blakey <paulb@mellanox.com>

diff --git a/ofproto/ofproto-dpif-upcall.c b/ofproto/ofproto-dpif-upcall.c
index 158d65eec..3b28f9a22 100644
--- a/ofproto/ofproto-dpif-upcall.c
+++ b/ofproto/ofproto-dpif-upcall.c
@@ -1407,7 +1407,7 @@ handle_upcalls(struct udpif *udpif, struct upcall *upcalls,
             ovs_mutex_lock(&ukey->mutex);
             if (ops[i].dop.error) {
                 transition_ukey(ukey, UKEY_EVICTED);
-            } else {
+            } else if (ukey->state < UKEY_OPERATIONAL) {
                 transition_ukey(ukey, UKEY_OPERATIONAL);
             }
             ovs_mutex_unlock(&ukey->mutex);
